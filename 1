open System

type Tree =
    | Leaf of string
    | Node of string * Tree * Tree

let rec mapTree f tree =
    match tree with
    | Leaf s -> Leaf (f s)
    | Node (s, left, right) -> Node (f s, mapTree f left, mapTree f right)

let replaceFirstChar newChar s =
    if String.IsNullOrEmpty(s) then s
    else 
        let rest = if s.Length > 1 then s.[1..] else ""
        string newChar + rest

let transformTree newChar tree =
    mapTree (replaceFirstChar newChar) tree

let inputString prompt =
    printf "%s" prompt
    Console.ReadLine()

let rec buildTree() =
    printfn "\nСоздание элемента дерева:"
    printfn "1 - Создать лист"
    printfn "2 - Создать узел"
    printf "Выберите вариант (1 или 2): "
    
    match Console.ReadLine() with
    | "1" ->
        let value = inputString "Введите значение для листа: "
        Leaf value
    | "2" ->
        let value = inputString "Введите значение для узла: "
        printfn "\nСоздание левого поддерева для узла '%s':" value
        let left = buildTree()
        printfn "\nСоздание правого поддерева для узла '%s':" value
        let right = buildTree()
        Node(value, left, right)
    | _ ->
        printfn "Неверный выбор. Пожалуйста, попробуйте снова."
        buildTree()


let rec printTree indent tree =
    match tree with
    | Leaf s -> 
        printfn "%s└── Leaf: %s" indent s
    | Node (s, left, right) -> 
        printfn "%s├── Node: %s" indent s
        printTree (indent + "│   ") left
        printTree (indent + "    ") right

[<EntryPoint>]
let main argv =
    printfn "Программа для замены первого символа в дереве строк"
    printfn "--------------------------------------------------"
    
    printfn "\nДавайте построим дерево:"
    let tree = buildTree()
    
    printfn "\nВаше дерево:"
    printTree "" tree
    
    let rec inputChar() =
        printf "\nВведите символ для замены первого символа в строках: "
        let input = Console.ReadLine()
        if not (String.IsNullOrEmpty(input)) && input.Length = 1 then
            input.[0]
        else
            printfn "Ошибка: введите ровно один символ."
            inputChar()
    
    let replaceChar = inputChar()
    
    let transformedTree = transformTree replaceChar tree
   
    printfn "\nРезультат преобразования:"
    printTree "" transformedTree
   
    0
